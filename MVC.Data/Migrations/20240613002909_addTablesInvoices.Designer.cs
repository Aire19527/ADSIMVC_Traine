// <auto-generated />
using System;
using MVC.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240613002909_addTablesInvoices")]
    partial class addTablesInvoices
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC.Data.Entity.CategoryEntity", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"));

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCategory");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("MVC.Data.Entity.ImageProductEntity", b =>
                {
                    b.Property<int>("IdImageProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImageProduct"));

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImageProduct");

                    b.HasIndex("IdProduct");

                    b.ToTable("ImageProduct");
                });

            modelBuilder.Entity("MVC.Data.Entity.InvoiceDetailEntity", b =>
                {
                    b.Property<int>("IdInvoiceDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInvoiceDetail"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("IdInvoice")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdInvoiceDetail");

                    b.HasIndex("IdInvoice");

                    b.HasIndex("IdProduct");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("MVC.Data.Entity.InvoiceEntity", b =>
                {
                    b.Property<int>("IdInvoice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInvoice"));

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdInvoice");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("MVC.Data.Entity.ProductEntity", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdProduct");

                    b.HasIndex("IdCategory");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MVC.Data.Entity.ImageProductEntity", b =>
                {
                    b.HasOne("MVC.Data.Entity.ProductEntity", "ProductEntity")
                        .WithMany("ImageProductEntityies")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductEntity");
                });

            modelBuilder.Entity("MVC.Data.Entity.InvoiceDetailEntity", b =>
                {
                    b.HasOne("MVC.Data.Entity.InvoiceEntity", "InvoiceEntity")
                        .WithMany("InvoiceDetailEntities")
                        .HasForeignKey("IdInvoice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC.Data.Entity.ProductEntity", "ProductEntity")
                        .WithMany("InvoiceDetailEntities")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceEntity");

                    b.Navigation("ProductEntity");
                });

            modelBuilder.Entity("MVC.Data.Entity.ProductEntity", b =>
                {
                    b.HasOne("MVC.Data.Entity.CategoryEntity", "CategoryEntity")
                        .WithMany("ProductEntities")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryEntity");
                });

            modelBuilder.Entity("MVC.Data.Entity.CategoryEntity", b =>
                {
                    b.Navigation("ProductEntities");
                });

            modelBuilder.Entity("MVC.Data.Entity.InvoiceEntity", b =>
                {
                    b.Navigation("InvoiceDetailEntities");
                });

            modelBuilder.Entity("MVC.Data.Entity.ProductEntity", b =>
                {
                    b.Navigation("ImageProductEntityies");

                    b.Navigation("InvoiceDetailEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
